import { OnInit, TemplateRef, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { UselectDefaultConfig } from './../../classes/uselect-default-config.class';
import { IUselectData, IUselectServiceItem } from './../../classes/uselect-service-items.interface';
export declare class UselectComponent implements OnInit, ControlValueAccessor {
    private defaultConfig;
    placeholder?: string;
    service: IUselectServiceItem;
    dropDownValueFunc?: (IUselectData) => string;
    selectedValueFunc?: (IUselectData) => string;
    dropDownTemplate?: TemplateRef<any>;
    selectTemplate?: TemplateRef<any>;
    sortKey?: string;
    uselectSearch: ElementRef;
    clickedOutside($event: any): void;
    private value;
    private items;
    private highlightedIndex;
    private search;
    private isDropDownOpen;
    private onChange;
    private onTouched;
    constructor(defaultConfig: UselectDefaultConfig);
    ngOnInit(): void;
    writeValue(value: IUselectData[] | IUselectData): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private sortValue();
    private normalizeSort();
    private dropDownValue(item);
    private selectedValue(item);
    private selectItem(item);
    removeItem(item: IUselectData): void;
    private onSearchChange();
    onItemDrop($event: any): void;
    private onSearchKeydown($event);
    private isMultiple();
    private toggleDropDown(isOpen?, $event?);
    private isCurrent(item);
    private allCheck();
    private trackByIndex(index, obj);
}
